import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export default function TableRow({ value, onChange, onDelete, isDirty, duplicateNumber }) {
    const clampNonNeg = (n) => (Number.isNaN(n) || n < 0 ? 0 : n);
    const total = (value.adults ?? 0) +
        (value.children ?? 0) +
        (value.staff ?? 0) +
        (value.no_menu ?? 0);
    return (_jsxs("tr", { className: "odd:bg-white even:bg-gray-50", children: [_jsx("td", { className: "px-2 py-1 text-center", children: _jsxs("label", { className: "inline-flex items-center gap-2", children: [_jsx("input", { type: "checkbox", checked: !!value.is_main_table, onChange: (e) => onChange({ is_main_table: e.target.checked }) }), _jsx("span", { className: "text-xs text-gray-600", children: "MP" })] }) }), _jsx("td", { className: "px-2 py-1", children: _jsxs("div", { className: "flex flex-col", children: [_jsx("input", { type: "number", inputMode: "numeric", pattern: "\\d*", min: 1, step: 1, className: "w-24 px-2 py-1 border rounded-md", placeholder: "n\u00BA", value: value.table_number ?? "", onChange: (e) => {
                                const raw = e.target.value ?? "";
                                const digits = raw.replace(/\D+/g, ""); // fuerza solo dÃ­gitos
                                onChange({ table_number: digits === "" ? "" : digits });
                            } }), duplicateNumber && (_jsx("span", { className: "text-[11px] text-red-600 mt-1", children: "N\u00FAmero de mesa duplicado" }))] }) }), _jsx("td", { className: "px-2 py-1 text-right font-medium", children: total }), _jsx("td", { className: "px-2 py-1", children: _jsx("input", { className: "w-20 text-right px-2 py-1 border rounded-md", type: "number", min: 0, value: value.adults ?? 0, onChange: (e) => onChange({ adults: clampNonNeg(Number(e.target.value)) }) }) }), _jsx("td", { className: "px-2 py-1", children: _jsx("input", { className: "w-20 text-right px-2 py-1 border rounded-md", type: "number", min: 0, value: value.staff ?? 0, onChange: (e) => onChange({ staff: clampNonNeg(Number(e.target.value)) }) }) }), _jsx("td", { className: "px-2 py-1", children: _jsx("input", { className: "w-20 text-right px-2 py-1 border rounded-md", type: "number", min: 0, value: value.children ?? 0, onChange: (e) => onChange({ children: clampNonNeg(Number(e.target.value)) }) }) }), _jsx("td", { className: "px-2 py-1", children: _jsx("input", { className: "w-20 text-right px-2 py-1 border rounded-md", type: "number", min: 0, value: value.no_menu ?? 0, onChange: (e) => onChange({ no_menu: clampNonNeg(Number(e.target.value)) }) }) }), _jsx("td", { className: "px-2 py-1", children: _jsx("input", { className: "w-full px-2 py-1 border rounded-md", placeholder: "Observaciones", value: value.notes ?? "", onChange: (e) => onChange({ notes: e.target.value }) }) }), _jsx("td", { className: "px-2 py-1 whitespace-nowrap", children: _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("button", { onClick: onDelete, className: "px-2 py-1 text-sm rounded-md border border-gray-300 hover:bg-gray-100", children: "Eliminar" }), isDirty && (_jsx("span", { className: "text-[11px] px-1.5 py-0.5 rounded bg-yellow-100 text-yellow-800 border border-yellow-200", children: "Cambios sin guardar" }))] }) })] }));
}
